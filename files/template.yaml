MixinMediaOriginAccess:
  Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
  Properties:
    CloudFrontOriginAccessIdentityConfig:
      Comment: {{rootName}}

{{#each buckets}}
MixinMediaBucket{{resourceTitle}}:
  Type: "AWS::S3::Bucket"
  DeletionPolicy: Retain
  Properties:
    BucketName: {{name}}
    CorsConfiguration:
      CorsRules:
        - AllowedHeaders:
            - "*"
          AllowedMethods:
            - "GET"
            - "PUT"
          AllowedOrigins:
            - "*"
          ExposedHeaders:
            - Access-Control-Allow-Origin
            - Access-Control-Allow-Methods
            - Access-Control-Allow-Headers
            - ETag
          MaxAge: {{expires}}
    LifecycleConfiguration:
      Rules:
        - AbortIncompleteMultipartUpload:
            DaysAfterInitiation: 1
          Status: Enabled
    Tags:
    {{#each tags}}
      - Key: {{Key}}
        Value: {{Value}}
    {{/each}}

# Allows anyone to *read* a given object, but prevents scanning of our media resources through list.
MixinMediaBucket{{resourceTitle}}Policy:
  Type: AWS::S3::BucketPolicy
  DeletionPolicy: Retain
  Properties:
    Bucket: {{name}}
    PolicyDocument:
      Statement:
        - Action:
            - "s3:GetObject"
          Effect: "Allow"
          Resource: "arn:aws:s3:::{{name}}/*"
          Principal:
            CanonicalUser:
              "Fn::GetAtt": [MixinMediaOriginAccess, S3CanonicalUserId]
{{/each}}

{{#each edges}}
WAF{{resourceTitle}}:
  Type: "AWS::CloudFormation::Stack"
  Properties:
    Parameters:
      SqlInjectionProtectionParam: "yes"
      CrossSiteScriptingProtectionParam: "yes"
      ActivateReputationListsProtectionParam: "yes"
      ActivateBadBotProtectionParam: "yes"
      SendAnonymousUsageData: "no"
      ActivateHttpFloodProtectionParam: "yes"
      RequestThreshold: "{{waf.floodThreshold}}"
      ActivateScansProbesProtectionParam: "yes"
      ErrorThreshold: "{{waf.errorThreshold}}"
      WAFBlockPeriod: "{{waf.blockTTL}}"
      AccessLogBucket: "{{logBucket}}"
      RootName: {{@root.rootName}}
    Tags:
      {{#each tags}}
      - Key: {{Key}}
        Value: {{Value}}
      {{/each}}
    TemplateURL: "https://s3.amazonaws.com/{{@root.skyBucket}}/mixin-code/media/waf.json"

MixinMediaBucket{{resourceTitle}}CF:
  DependsOn:
    - WAF{{resourceTitle}}
  Type: "AWS::CloudFront::Distribution"
  Properties:
    DistributionConfig:
      Aliases:
        - {{hostname}}
      Comment: CloudFront Distribution of the Panda Sky Media Mixin
      DefaultCacheBehavior:
        AllowedMethods: ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
        CachedMethods: ["GET", "HEAD", "OPTIONS"]
        Compress: true
        MinTTL: 0
        MaxTTL: 31536000
        DefaultTTL: {{expires}}
        ForwardedValues:
          Cookies:
            Forward: "all"
          Headers: ["Accept", "Access-Control-Request-Headers", "Access-Control-Request-Method", "Authorization", "Origin"]
          QueryString: true
          QueryStringCacheKeys: ["*"]
        SmoothStreaming: false
        TargetOriginId: "MixinMediaBucket{{resourceTitle}}"
        ViewerProtocolPolicy: redirect-to-https
      DefaultRootObject: ""
      Enabled: true
      HttpVersion: http2
      IPV6Enabled: false
      Origins:
        - Id: "MixinMediaBucket{{resourceTitle}}"
          DomainName: {{bucketDomainName}}
          OriginPath: ""
          S3OriginConfig:
            OriginAccessIdentity:
              "Fn::Join":
                - ""
                -
                  - "origin-access-identity/cloudfront/"
                  - Ref: MixinMediaOriginAccess
      PriceClass: {{priceClass}}
      ViewerCertificate:
        AcmCertificateArn: {{certificate}}
        MinimumProtocolVersion: "TLSv1.2_2018"
        SslSupportMethod: "sni-only"
      Logging:
        Bucket: {{logBucket}}.s3.amazonaws.com
        IncludeCookies: true
        Prefix: ""
      WebACLId:
        "Fn::GetAtt": ["WAF{{resourceTitle}}", "Outputs.WAFWebACL"]
    Tags:
    {{#each tags}}
      - Key: {{Key}}
        Value: {{Value}}
    {{/each}}

MixinMediaBucket{{resourceTitle}}DNS:
  Type: AWS::Route53::RecordSetGroup
  DependsOn:
    - "MixinMediaBucket{{resourceTitle}}CF"
  Properties:
    Comment: Media endpoint
    HostedZoneName: {{hostedzone}}
    RecordSets:
      - Name: {{hostname}}
        Type: A
        AliasTarget:
          DNSName:
            "Fn::GetAtt":
              - "MixinMediaBucket{{resourceTitle}}CF"
              - "DomainName"
          EvaluateTargetHealth: false
          HostedZoneId: Z2FDTNDATAQYW2

{{/each}}
